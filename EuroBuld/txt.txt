app.get('/api/available_orders', async (req, res) => {
    try {
        const result = await app.locals.db.request().query(`
            SELECT 
                co.ID_Customers_orders, 
                u.First_name + ' ' + ISNULL(u.Last_name, '') + ' ' + ISNULL(u.Patronymic, '') AS Client_FullName,
                s.Item_Name AS Service, 
                co.Order_Date
            FROM Customer_orders co
            LEFT JOIN Users u ON co.ID_Users = u.ID_Users
            LEFT JOIN Service s ON co.ID_Service = s.ID_Service
            LEFT JOIN Processed_customer_orders pco ON co.ID_Customers_orders = pco.ID_Customer_orders
            WHERE pco.ID_Processed_customer_orders IS NULL
        `);
        res.json(result.recordset);
    } catch (err) {
        console.error('Ошибка при получении доступных заказов:', err);
        res.status(500).send('Ошибка сервера');
    }
});

app.get('/api/processed_customer_orders/staff/:staffId', async (req, res) => {
    const staffId = req.params.staffId;
    
    try {
        const result = await app.locals.db.request()
            .input('staffId', mssql.Int, staffId)
            .query(`
                SELECT 
                    pco.ID_Processed_customer_orders, 
                    u.First_name + ' ' + ISNULL(u.Last_name, '') + ' ' + ISNULL(u.Patronymic, '') AS Client_FullName,
                    st.First_name + ' ' + ISNULL(st.Last_name, '') + ' ' + ISNULL(st.Patronymic, '') AS Staff_FullName,
                    f.First_Name + ' ' + ISNULL(f.Last_Name, '') + ' ' + ISNULL(f.Patronymic, '') AS Foreman_FullName,
                    so.Name_Status, 
                    pco.Date_Start, 
                    pco.Date_Ending,  
                    pco.Final_sum
                FROM Processed_customer_orders pco
                LEFT JOIN Customer_orders co ON pco.ID_Customer_orders = co.ID_Customers_orders
                LEFT JOIN Users u ON co.ID_Users = u.ID_Users
                LEFT JOIN Staff st ON pco.ID_Staff = st.ID_Staff
                LEFT JOIN Foremen f ON pco.ID_Foreman = f.ID_Foreman
                LEFT JOIN Status_Orders so ON pco.ID_Status_Orders = so.ID_Status_Orders
                WHERE pco.ID_Staff = @staffId
            `);
        
        res.json(result.recordset);
    } catch (err) {
        console.error('Ошибка при получении заказов сотрудника:', err);
        res.status(500).send('Ошибка сервера');
    }
});

// Получение данных конкретного заказа
app.get('/api/processed_customer_orders/:id', async (req, res) => {
    try {
        const result = await app.locals.db.request()
            .input('id', mssql.Int, req.params.id)
            .query(`
                SELECT 
                    pco.ID_Processed_customer_orders,
                    u.First_name + ' ' + ISNULL(u.Last_name, '') + ' ' + ISNULL(u.Patronymic, '') AS Client_FullName,
                    st.First_name + ' ' + ISNULL(st.Last_name, '') + ' ' + ISNULL(st.Patronymic, '') AS Staff_FullName,
                    f.First_Name + ' ' + ISNULL(f.Last_Name, '') + ' ' + ISNULL(f.Patronymic, '') AS Foreman_FullName,
                    pco.ID_Customer_orders,
                    pco.ID_Staff,
                    pco.ID_Foreman,
                    pco.ID_Status_Orders,
                    CONVERT(varchar, pco.Date_Start, 23) AS Date_Start,
                    CONVERT(varchar, pco.Date_Ending, 23) AS Date_Ending,
                    pco.Final_sum,
                    so.Name_Status
                FROM Processed_customer_orders pco
                LEFT JOIN Customer_orders co ON pco.ID_Customer_orders = co.ID_Customers_orders
                LEFT JOIN Users u ON co.ID_Users = u.ID_Users
                LEFT JOIN Staff st ON pco.ID_Staff = st.ID_Staff
                LEFT JOIN Foremen f ON pco.ID_Foreman = f.ID_Foreman
                LEFT JOIN Status_Orders so ON pco.ID_Status_Orders = so.ID_Status_Orders
                WHERE pco.ID_Processed_customer_orders = @id
            `);
        
        if (result.recordset.length === 0) {
            return res.status(404).send('Заказ не найден');
        }
        
        res.json(result.recordset[0]);
    } catch (err) {
        console.error('Ошибка